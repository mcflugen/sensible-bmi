name: Test

on: [push, pull_request]

jobs:
  check-tag:
    # Run on external PRs, but not on internal PRs, to avoid duplicate runs
    if: |
      github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ubuntu-latest
    outputs:
      publish_url: ${{ steps.check-publish.outputs.publish_url }}

    steps:
      - name: Check if this is a release/prerelease
        id: check-publish
        run: |
          tag_name="${GITHUB_REF#refs/tags/}"
          if [[ "$tag_name" =~ ^v[0-9]+\.[0-9]+\.[0-9]+[ab][0-9]+$ ]]; then
            publish_url="https://test.pypi.org/legacy/"
          elif [[ "$tag_name" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            publish_url="https://upload.pypi.org/legacy/"
          else
            publish_url="none"
          fi
          echo "publish_url=$publish_url" >> "$GITHUB_OUTPUT"
          echo "tag_name=$tag_name"
          echo "publish_url=$publish_url"

  build-sdist:
    name: Build source distribution
    needs: check-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: build-sdist
          path: ${{ github.workspace }}/dist/*.tar.gz

  test:
    needs: build-sdist
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/download-artifact@v4
        name: Download build artifacts
        with:
          pattern: "build-*"
          merge-multiple: true
          path: ${{ github.workspace }}/dist

      - name: Test
        run: |
          pip install nox
          nox --non-interactive --error-on-missing-interpreter -s test -- dist

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  docs:
    needs: build-sdist
    strategy:
      matrix:
        os: [macos-latest]
        python-version: ["3.12"]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          miniforge-variant: Miniforge3
          miniforge-version: latest
          auto-update-conda: true

      - uses: actions/download-artifact@v4
        name: Download build artifacts
        with:
          pattern: "build-*"
          merge-multiple: true
          path: ${{ github.workspace }}/dist

      - name: Display structure of downloaded files
        run: ls -R

      - name: install and check pandoc
        run: |
          conda install pandoc -c conda-forge
          pandoc --help
          pandoc --version

      - name: Build documentation
        run: |
          pip install nox
          nox -s docs-build -- dist

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/html/

  deploy-docs:
    needs: docs
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
